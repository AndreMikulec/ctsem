% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctStanFit.R
\name{ctStanFit}
\alias{ctStanFit}
\title{ctStanFit}
\usage{
ctStanFit(datalong, ctstanmodelobj, iter = 1000, kalman = TRUE,
  densehyper = FALSE, fit = TRUE, plot = FALSE, noncentered = TRUE,
  optimize = FALSE, vb = FALSE, chains = 3, ...)
}
\arguments{
\item{datalong}{long format data containing columns for subject id, manifest variables, 
any time dependent (i.e. varying within subject) predictors, 
and any time independent (not varying within subject) predictors.}

\item{ctstanmodelobj}{model object as generated by \code{\link{ctModel}} with type='stanct' or 'standt'.}

\item{iter}{number of iterations, half of which will be devoted to warmup.}

\item{kalman}{logical indicating whether or not to integrate over latent states using a Kalman filter. 
Generally recommended to set TRUE.}

\item{densehyper}{logical indicating whether to estimate a prior for correlations between parameters, or fix it to 0.
Samples much faster if set to FALSE, but setting TRUE may improve estimation of priors for subject level parameters.}

\item{fit}{If TRUE, fit specified model using Stan, if FALSE, return stan model object without fitting.}

\item{noncentered}{if FALSE, sample subject level parameters directly, if TRUE, sample subject level parameters as
deviations from the estimated population mean. TRUE seems to result in somewhat more effective sampling, 
based on limited testing.}

\item{optimize}{if TRUE, use Stan's optimizer for maximum a posteriori estimates. Not recommended unless
no parameters vary across subjects.}

\item{vb}{if TRUE, use Stan's variational approximation. Presently experimental and not recommended.}

\item{chains}{number of chains to sample.}
}
\description{
Fits a ctsem model specified via \code{\link{ctModel}} with type either 'stanct' or 'standt', using Bayseian inference software
Stan.
}

