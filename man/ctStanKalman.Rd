% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctStanKalman.R
\name{ctStanKalman}
\alias{ctStanKalman}
\title{ctStanKalman}
\usage{
ctStanKalman(ctstanfitobj, datalong = NULL, timerange = "asdata",
  timestep = "asdata", subjects = 1, plot = FALSE, ...)
}
\arguments{
\item{ctstanfitobj}{fit object as generated by \code{\link{ctStanFit}}.}

\item{datalong}{Optional long format data object as used by \code{\link{ctStanFit}}. 
If not included, data from ctstanfitobj will used.}

\item{timerange}{Either 'asdata' to just use the observed data range, or a numeric vector of length 2 denoting start and end of time range, 
allowing for estimates outside the range of observed data.}

\item{timestep}{Either 'asdata' to just use the observed data 
(which also requires 'asdata' for timerange) or a positive numeric value
indicating the time step to use for interpolating values.}

\item{subjects}{vector of integers denoting which subjects (from 1 to N) to plot predictions for.}

\item{plot}{Logical. If TRUE, plots output instead of returning it. 
See \link{\code{ctStanKalmanPlot}} for the possible arguments.}
}
\value{
Returns a list containing matrix objects etaprior, etaupd, etasmooth, y, yprior, 
yupd, ysmooth, prederror, time, loglik,  with values for each time point in each row. 
eta refers to latent states and y to manifest indicators - y itself is thus just 
the input data. 
Covariance matrices etapriorcov, etaupdcov, etasmoothcov, ypriorcov, yupdcov, ysmoothcov,  
are returned in a row * column * time array. 
If plot=TRUE, nothing is returned but a plot is generated.
}
\description{
Outputs predicted, updated, and smoothed estimates of manifest indicators and latent states, 
with covariances, for specific subjects from data fit with \code{\link{ctStanFit}}.
}
\details{
If plotting, the various arguments ending in vec are specified as the appropriate format vectors
for the parameter type. 

kalmanvec is a vector of names of any elements of the output you wish to plot, 
the defaults of 'y' and 'yprior' plot the original data, 'y', 
and the prior from the Kalman filter for y. Replacing 'y' by 'eta' will 
plot latent variables instead (though 'eta' alone does not exist) and replacing 'prior' 
with 'upd' or 'smooth' respectively plotting updated (conditional on all data up to current time point)
or smoothed (conditional on all data) estimates.

errorvec is a vector of names of covariance elements to use for uncertainty indication 
around the kalmanvec items. 'auto' includes the latent covariance when plotting
latent states, and total covariance when plotting expectations of observed states.

ltyvec is a vector of line types, varying over dimensions of the kalmanvec object.
colvec is a color vector, varying either over subject if multiple subjects, or over 
the dimensions of the kalmanvec object.
lwdvec is a vector of line widths, varying over the kalmanvec objects. 
pchvec is a vector of symbol types, varying over the dimensions of the kalmanvec object.

typevec is a vector of plot types, varying over the kalmanvec objects. 'auto' plots lines for
any  'prior', 'upd', or 'smooth' objects, and points otherwise.
subsetindices can be a vector of integers to use for subsetting the (columns) of kalmanvec objects.
}
\examples{
#Basic
ctStanKalman(ctstantestfit, timerange=c(0,60), timestep=.5, plot=TRUE)

#Multiple subjects, y and yprior, showing plot arguments
ctStanKalman(ctstantestfit, timerange=c(0,60), timestep=.1, plot=TRUE,
  subjects=2:3, 
  kalmanvec=c('y','yprior'),
  errorvec=c(NA,'ypriorcov'), #'auto' would also have achieved this
  ltyvec="auto",
  colvec='auto', 
  lwdvec='auto', 
  subsetindices=2, #Only plotting 2nd dimension of y and yprior
  pchvec='auto', typevec='auto',grid=TRUE,legend=TRUE,
  plotcontrol=list(xlim=c(0,55),main='Observations and priors'),
  polygoncontrol=list(density=20))
}

